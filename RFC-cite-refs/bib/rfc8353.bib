@misc{rfc8353,
	series =	{Request for Comments},
	number =	8353,
	howpublished =	{RFC 8353},
	publisher =	{RFC Editor},
	doi =		{10.17487/RFC8353},
	url =		{https://rfc-editor.org/rfc/rfc8353.txt},
        author =	{Mayank D. Upadhyay and Seema Malkani and Wang Weijun},
	title =		{{Generic Security Service API Version 2: Java Bindings Update}},
	pagetotal =	96,
	year =		2018,
	month =		may,
	abstract =	{The Generic Security Services Application Programming Interface (GSS-API) offers application programmers uniform access to security services atop a variety of underlying cryptographic mechanisms. This document updates the Java bindings for the GSS-API that are specified in "Generic Security Service API Version 2: Java Bindings Update" (RFC 5653). This document obsoletes RFC 5653 by adding a new output token field to the GSSException class so that when the initSecContext or acceptSecContext methods of the GSSContext class fail, it has a chance to emit an error token that can be sent to the peer for debugging or informational purpose. The stream-based GSSContext methods are also removed in this version. The GSS-API is described at a language-independent conceptual level in "Generic Security Service Application Program Interface Version 2, Update 1" (RFC 2743). The GSS-API allows a caller application to authenticate a principal identity, to delegate rights to a peer, and to apply security services such as confidentiality and integrity on a per-message basis. Examples of security mechanisms defined for GSS-API are "The Simple Public-Key GSS-API Mechanism (SPKM)" (RFC 2025) and "The Kerberos Version 5 Generic Security Service Application Program Interface (GSS-API) Mechanism: Version 2" (RFC 4121).},
}
