@misc{rfc5682,
	series =	{Request for Comments},
	number =	5682,
	howpublished =	{RFC 5682},
	publisher =	{RFC Editor},
	doi =		{10.17487/RFC5682},
	url =		{https://rfc-editor.org/rfc/rfc5682.txt},
        author =	{Markku Kojo and Pasi Sarolahti and Kazunori Yamamoto and Max Hata},
	title =		{{Forward RTO-Recovery (F-RTO): An Algorithm for Detecting Spurious Retransmission Timeouts with TCP}},
	pagetotal =	19,
	year =		2009,
	month =		sep,
	abstract =	{The purpose of this document is to move the F-RTO (Forward RTO-Recovery) functionality for TCP in RFC 4138 from Experimental to Standards Track status. The F-RTO support for Stream Control Transmission Protocol (SCTP) in RFC 4138 remains with Experimental status. See Appendix B for the differences between this document and RFC 4138. Spurious retransmission timeouts cause suboptimal TCP performance because they often result in unnecessary retransmission of the last window of data. This document describes the F-RTO detection algorithm for detecting spurious TCP retransmission timeouts. F-RTO is a TCP sender-only algorithm that does not require any TCP options to operate. After retransmitting the first unacknowledged segment triggered by a timeout, the F-RTO algorithm of the TCP sender monitors the incoming acknowledgments to determine whether the timeout was spurious. It then decides whether to send new segments or retransmit unacknowledged segments. The algorithm effectively helps to avoid additional unnecessary retransmissions and thereby improves TCP performance in the case of a spurious timeout. {[}STANDARDS-TRACK{]}},
}
